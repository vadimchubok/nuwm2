mesh Th = square(20,20, [2 * x, y]);
real t = 0, dt = 0.1, endT = 1., m = 10;

real[int] vals(0.5:0.025:1.);

func real eta(real t) {
    return 1 / (t + 1);}
func real mu(real t) {
    return 0.54030230586 / (t + 1);}
func real ans(real t) {
    return cos(x) / (t + 1);}

func real f(real t) {
    return cos(t) - 2;}
func u0 = x * x;


fespace Uh(Th, P2);
Uh u;
Uh v;
Uh exact=ans(endT);
Uh uOld = u0;

solve s(u, v)
= int2d(Th)(dx(u) * dx(v) + dy(u) * dy(v))
+ int2d(Th)(u / dt * v)
- int2d(Th)(uOld / dt * v)
- int2d(Th)(f(t) * v)
+ on(4, u = eta(t))
+ on(2, u = mu(t));


for (int i = 0; i < m; i++){
    t += dt;
    s;
    uOld = u;
    plot(u, fill=true, value=true, wait=false);
}
plot(exact, fill=true, value=true, wait=true);